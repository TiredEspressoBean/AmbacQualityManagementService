openapi: 3.0.3
info:
  title: My Project API
  version: 1.0.0
  description: REST endpoints for our tracker system
paths:
  /api/Companies/:
    get:
      operationId: api_Companies_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
    post:
      operationId: api_Companies_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/Companies/{id}/:
    get:
      operationId: api_Companies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Company.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: api_Companies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Company.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: api_Companies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Company.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: api_Companies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Company.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Customers/:
    get:
      operationId: api_Customers_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: api_Customers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/Customers/{id}/:
    get:
      operationId: api_Customers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: api_Customers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: api_Customers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: api_Customers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Documents/:
    get:
      operationId: api_Documents_list
      parameters:
      - in: query
        name: content_type
        schema:
          type: integer
      - in: query
        name: is_image
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: object_id
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: api_Documents_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/Documents/{id}/:
    get:
      operationId: api_Documents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: api_Documents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: api_Documents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_Documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Employees-Options/:
    get:
      operationId: api_Employees_Options_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeSelectList'
          description: ''
  /api/Employees-Options/{id}/:
    get:
      operationId: api_Employees_Options_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeSelect'
          description: ''
  /api/Equipment/:
    get:
      operationId: api_Equipment_list
      parameters:
      - in: query
        name: equipment_type
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEquipmentList'
          description: ''
    post:
      operationId: api_Equipment_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
  /api/Equipment-Options/:
    get:
      operationId: api_Equipment_Options_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEquipmentSelectList'
          description: ''
  /api/Equipment-Options/{id}/:
    get:
      operationId: api_Equipment_Options_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentSelect'
          description: ''
  /api/Equipment-types/:
    get:
      operationId: api_Equipment_types_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEquipmentTypeList'
          description: ''
    post:
      operationId: api_Equipment_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipmentTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipmentTypeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentType'
          description: ''
  /api/Equipment-types/{id}/:
    get:
      operationId: api_Equipment_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipment Type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentType'
          description: ''
    put:
      operationId: api_Equipment_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipment Type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipmentTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipmentTypeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentType'
          description: ''
    patch:
      operationId: api_Equipment_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipment Type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEquipmentTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEquipmentTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEquipmentTypeRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentType'
          description: ''
    delete:
      operationId: api_Equipment_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipment Type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Equipment/{id}/:
    get:
      operationId: api_Equipment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
    put:
      operationId: api_Equipment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
    patch:
      operationId: api_Equipment_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEquipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEquipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEquipmentRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipment'
          description: ''
    delete:
      operationId: api_Equipment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Error-types/:
    get:
      operationId: api_Error_types_list
      parameters:
      - in: query
        name: error_name
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedErrorTypeList'
          description: ''
    post:
      operationId: api_Error_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ErrorTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ErrorTypeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorType'
          description: ''
  /api/Error-types/{id}/:
    get:
      operationId: api_Error_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quality errors list.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorType'
          description: ''
    put:
      operationId: api_Error_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quality errors list.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ErrorTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ErrorTypeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorType'
          description: ''
    patch:
      operationId: api_Error_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quality errors list.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedErrorTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedErrorTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedErrorTypeRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorType'
          description: ''
    delete:
      operationId: api_Error_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this quality errors list.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/ErrorReports/:
    get:
      operationId: api_ErrorReports_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQualityReportFormList'
          description: ''
    post:
      operationId: api_ErrorReports_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityReportFormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualityReportFormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualityReportFormRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReportForm'
          description: ''
  /api/ErrorReports/{id}/:
    get:
      operationId: api_ErrorReports_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Error Report.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReportForm'
          description: ''
    put:
      operationId: api_ErrorReports_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Error Report.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityReportFormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QualityReportFormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QualityReportFormRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReportForm'
          description: ''
    patch:
      operationId: api_ErrorReports_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Error Report.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQualityReportFormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQualityReportFormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQualityReportFormRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityReportForm'
          description: ''
    delete:
      operationId: api_ErrorReports_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Error Report.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/HubspotGates/:
    get:
      operationId: api_HubspotGates_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalAPIOrderIdentifier'
          description: ''
    post:
      operationId: api_HubspotGates_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAPIOrderIdentifierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalAPIOrderIdentifierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalAPIOrderIdentifierRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAPIOrderIdentifier'
          description: ''
  /api/HubspotGates/{id}/:
    get:
      operationId: api_HubspotGates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this External API Order Identifier.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAPIOrderIdentifier'
          description: ''
    put:
      operationId: api_HubspotGates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this External API Order Identifier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAPIOrderIdentifierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalAPIOrderIdentifierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalAPIOrderIdentifierRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAPIOrderIdentifier'
          description: ''
    patch:
      operationId: api_HubspotGates_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this External API Order Identifier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExternalAPIOrderIdentifierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExternalAPIOrderIdentifierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExternalAPIOrderIdentifierRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAPIOrderIdentifier'
          description: ''
    delete:
      operationId: api_HubspotGates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this External API Order Identifier.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/MeasurementDefinitions/:
    get:
      operationId: api_MeasurementDefinitions_list
      parameters:
      - in: query
        name: label
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: step
        schema:
          type: integer
      - in: query
        name: step__name
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMeasurementDefinitionList'
          description: ''
    post:
      operationId: api_MeasurementDefinitions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeasurementDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasurementDefinitionRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementDefinition'
          description: ''
  /api/MeasurementDefinitions/{id}/:
    get:
      operationId: api_MeasurementDefinitions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this measurement definition.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementDefinition'
          description: ''
    put:
      operationId: api_MeasurementDefinitions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this measurement definition.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeasurementDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasurementDefinitionRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementDefinition'
          description: ''
    patch:
      operationId: api_MeasurementDefinitions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this measurement definition.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeasurementDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeasurementDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeasurementDefinitionRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementDefinition'
          description: ''
    delete:
      operationId: api_MeasurementDefinitions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this measurement definition.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Orders/:
    get:
      operationId: api_Orders_list
      parameters:
      - in: query
        name: archived
        schema:
          type: boolean
      - in: query
        name: company
        schema:
          type: integer
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: customer
        schema:
          type: integer
      - in: query
        name: estimated_completion__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: estimated_completion__lte
        schema:
          type: string
          format: date-time
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrdersList'
          description: ''
    post:
      operationId: api_Orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrdersRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrdersRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
          description: ''
  /api/Orders/{id}/:
    get:
      operationId: api_Orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
          description: ''
    put:
      operationId: api_Orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrdersRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrdersRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
          description: ''
    patch:
      operationId: api_Orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrdersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrdersRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrdersRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
          description: ''
    delete:
      operationId: api_Orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Orders/{id}/increment-step/:
    post:
      operationId: api_Orders_increment_step_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepIncrementInputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StepIncrementInputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StepIncrementInputRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepIncrementResponse'
          description: ''
  /api/Orders/{id}/parts/bulk-add/:
    post:
      operationId: api_Orders_parts_bulk_add_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAddPartsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkAddPartsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkAddPartsRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/Orders/{id}/parts/bulk-remove/:
    post:
      operationId: api_Orders_parts_bulk_remove_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRemovePartsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkRemovePartsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkRemovePartsRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/Orders/{id}/step-distribution/:
    get:
      operationId: api_Orders_step_distribution_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order.
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStepDistributionResponseList'
          description: ''
  /api/PartTypes/:
    get:
      operationId: api_PartTypes_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter processes by associated part type ID
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartTypeList'
          description: ''
    post:
      operationId: api_PartTypes_create
      parameters:
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter processes by associated part type ID
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartTypeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartType'
          description: ''
  /api/PartTypes/{id}/:
    get:
      operationId: api_PartTypes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Part Type.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter processes by associated part type ID
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartType'
          description: ''
    put:
      operationId: api_PartTypes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Part Type.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter processes by associated part type ID
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartTypeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartType'
          description: ''
    patch:
      operationId: api_PartTypes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Part Type.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter processes by associated part type ID
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPartTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPartTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPartTypeRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartType'
          description: ''
    delete:
      operationId: api_PartTypes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Part Type.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter processes by associated part type ID
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Parts/:
    get:
      operationId: api_Parts_list
      parameters:
      - in: query
        name: ERP_id
        schema:
          type: string
      - in: query
        name: archived
        schema:
          type: boolean
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: integer
      - in: query
        name: ordering
        schema:
          type: string
        description: Which field to order by, prepend "-" for descending.
      - in: query
        name: part_type
        schema:
          type: integer
      - in: query
        name: requires_sampling
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Filter by multiple status values.
        explode: true
        style: form
      - in: query
        name: step
        schema:
          type: integer
      - in: query
        name: work_order
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartsList'
          description: ''
    post:
      operationId: api_Parts_create
      parameters:
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Filter by multiple status values.
        explode: true
        style: form
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartsRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parts'
          description: ''
  /api/Parts/{id}/:
    get:
      operationId: api_Parts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Part.
        required: true
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Filter by multiple status values.
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parts'
          description: ''
    put:
      operationId: api_Parts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Part.
        required: true
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Filter by multiple status values.
        explode: true
        style: form
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartsRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parts'
          description: ''
    patch:
      operationId: api_Parts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Part.
        required: true
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Filter by multiple status values.
        explode: true
        style: form
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPartsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPartsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPartsRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parts'
          description: ''
    delete:
      operationId: api_Parts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Part.
        required: true
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Filter by multiple status values.
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Parts/{id}/increment/:
    post:
      operationId: api_Parts_increment_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Part.
        required: true
      - in: query
        name: status__in
        schema:
          type: array
          items:
            type: string
        description: Filter by multiple status values.
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: Step increment response
  /api/Processes/:
    get:
      operationId: api_Processes_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: part_type
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProcessesList'
          description: ''
    post:
      operationId: api_Processes_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcessesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcessesRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processes'
          description: ''
  /api/Processes/{id}/:
    get:
      operationId: api_Processes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Process.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processes'
          description: ''
    put:
      operationId: api_Processes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Process.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcessesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcessesRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processes'
          description: ''
    patch:
      operationId: api_Processes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Process.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProcessesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProcessesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProcessesRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processes'
          description: ''
    delete:
      operationId: api_Processes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Process.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Processes_with_steps/:
    get:
      operationId: api_Processes_with_steps_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProcessWithStepsList'
          description: ''
    post:
      operationId: api_Processes_with_steps_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessWithStepsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcessWithStepsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcessWithStepsRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessWithSteps'
          description: ''
  /api/Processes_with_steps/{id}/:
    get:
      operationId: api_Processes_with_steps_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Process.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessWithSteps'
          description: ''
    put:
      operationId: api_Processes_with_steps_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Process.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessWithStepsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProcessWithStepsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProcessWithStepsRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessWithSteps'
          description: ''
    patch:
      operationId: api_Processes_with_steps_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Process.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProcessWithStepsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProcessWithStepsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProcessWithStepsRequest'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessWithSteps'
          description: ''
    delete:
      operationId: api_Processes_with_steps_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Process.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/Sampling-rule-sets/:
    get:
      operationId: api_Sampling_rule_sets_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: part_type
        schema:
          type: integer
      - in: query
        name: process
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: step
        schema:
          type: integer
      - in: query
        name: version
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSamplingRuleSetList'
          description: ''
    post:
      operationId: api_Sampling_rule_sets_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamplingRuleSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SamplingRuleSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SamplingRuleSetRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamplingRuleSet'
          description: ''
  /api/Sampling-rule-sets/{id}/:
    get:
      operationId: api_Sampling_rule_sets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sampling rule set.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamplingRuleSet'
          description: ''
    put:
      operationId: api_Sampling_rule_sets_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sampling rule set.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamplingRuleSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SamplingRuleSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SamplingRuleSetRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamplingRuleSet'
          description: ''
    patch:
      operationId: api_Sampling_rule_sets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sampling rule set.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSamplingRuleSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSamplingRuleSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSamplingRuleSetRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamplingRuleSet'
          description: ''
    delete:
      operationId: api_Sampling_rule_sets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sampling rule set.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Sampling-rules/:
    get:
      operationId: api_Sampling_rules_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: rule_type
        schema:
          type: string
          enum:
          - every_nth_part
          - first_n_parts
          - last_n_parts
          - percentage
          - random
        description: |-
          * `every_nth_part` - Every Nth Part
          * `percentage` - Percentage of Parts
          * `random` - Pure Random
          * `first_n_parts` - First N Parts
          * `last_n_parts` - Last N Parts
      - in: query
        name: ruleset
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSamplingRuleList'
          description: ''
    post:
      operationId: api_Sampling_rules_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamplingRuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SamplingRuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SamplingRuleRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamplingRule'
          description: ''
  /api/Sampling-rules/{id}/:
    get:
      operationId: api_Sampling_rules_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sampling rule.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamplingRule'
          description: ''
    put:
      operationId: api_Sampling_rules_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sampling rule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamplingRuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SamplingRuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SamplingRuleRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamplingRule'
          description: ''
    patch:
      operationId: api_Sampling_rules_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sampling rule.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSamplingRuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSamplingRuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSamplingRuleRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamplingRule'
          description: ''
    delete:
      operationId: api_Sampling_rules_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sampling rule.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Steps/:
    get:
      operationId: api_Steps_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter steps by process's part type ID
      - in: query
        name: process
        schema:
          type: integer
        description: Filter steps by process ID
      - in: query
        name: process__part_type
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStepList'
          description: ''
    post:
      operationId: api_Steps_create
      parameters:
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter steps by process's part type ID
      - in: query
        name: process
        schema:
          type: integer
        description: Filter steps by process ID
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StepRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
          description: ''
  /api/Steps/{id}/:
    get:
      operationId: api_Steps_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Step.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter steps by process's part type ID
      - in: query
        name: process
        schema:
          type: integer
        description: Filter steps by process ID
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
          description: ''
    put:
      operationId: api_Steps_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Step.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter steps by process's part type ID
      - in: query
        name: process
        schema:
          type: integer
        description: Filter steps by process ID
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StepRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
          description: ''
    patch:
      operationId: api_Steps_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Step.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter steps by process's part type ID
      - in: query
        name: process
        schema:
          type: integer
        description: Filter steps by process ID
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStepRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
          description: ''
    delete:
      operationId: api_Steps_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Step.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter steps by process's part type ID
      - in: query
        name: process
        schema:
          type: integer
        description: Filter steps by process ID
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/Steps/{id}/resolved_rules/:
    get:
      operationId: api_Steps_resolved_rules_retrieve
      description: |-
        GET /steps/:id/resolved_rules/
        Returns the active + fallback rulesets for a given step
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Step.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter steps by process's part type ID
      - in: query
        name: process
        schema:
          type: integer
        description: Filter steps by process ID
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
          description: ''
  /api/Steps/{id}/update_sampling_rules/:
    post:
      operationId: api_Steps_update_sampling_rules_create
      description: Update or create a sampling rule set for this step
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Step.
        required: true
      - in: query
        name: part_type
        schema:
          type: integer
        description: Filter steps by process's part type ID
      - in: query
        name: process
        schema:
          type: integer
        description: Filter steps by process ID
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepSamplingRulesWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StepSamplingRulesWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StepSamplingRulesWriteRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepSamplingRulesResponse'
          description: Sampling rules updated successfully.
  /api/TrackerOrders/:
    get:
      operationId: api_TrackerOrders_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrackerPageOrderList'
          description: ''
    post:
      operationId: api_TrackerOrders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerPageOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrackerPageOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrackerPageOrderRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerPageOrder'
          description: ''
  /api/TrackerOrders/{id}/:
    get:
      operationId: api_TrackerOrders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerPageOrder'
          description: ''
    put:
      operationId: api_TrackerOrders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerPageOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrackerPageOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrackerPageOrderRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerPageOrder'
          description: ''
    patch:
      operationId: api_TrackerOrders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrackerPageOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrackerPageOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrackerPageOrderRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackerPageOrder'
          description: ''
    delete:
      operationId: api_TrackerOrders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/WorkOrders/:
    get:
      operationId: api_WorkOrders_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: related_order
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkOrderList'
          description: ''
    post:
      operationId: api_WorkOrders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkOrderRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
          description: ''
  /api/WorkOrders/{id}/:
    get:
      operationId: api_WorkOrders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Work Order.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
          description: ''
    put:
      operationId: api_WorkOrders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Work Order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkOrderRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
          description: ''
    patch:
      operationId: api_WorkOrders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Work Order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkOrderRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrder'
          description: ''
    delete:
      operationId: api_WorkOrders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Work Order.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/WorkOrders/upload_csv/:
    post:
      operationId: api_WorkOrders_upload_csv_create
      tags:
      - WorkOrders
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV or XLSX file containing work order rows
              required:
              - file
      security:
      - cookieAuth: []
      responses:
        '207':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: Multi-status response with per-row success/failure
  /api/auditlog/:
    get:
      operationId: api_auditlog_list
      parameters:
      - in: query
        name: action
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
        description: |-
          * `0` - create
          * `1` - update
          * `2` - delete
          * `3` - access
      - in: query
        name: actor
        schema:
          type: integer
      - in: query
        name: content_type
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: object_pk
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLogEntryList'
          description: ''
  /api/auditlog/{id}/:
    get:
      operationId: api_auditlog_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this log entry.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogEntry'
          description: ''
  /api/content-types/:
    get:
      operationId: api_content_types_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContentTypeList'
          description: ''
  /api/content-types/{id}/:
    get:
      operationId: api_content_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this content type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentType'
          description: ''
  /api/orders/{order_id}/parts/:
    get:
      operationId: api_orders_parts_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartsList'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/password/change/:
    post:
      operationId: auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/password/reset/:
    post:
      operationId: auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/password/reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/registration/:
    post:
      operationId: auth_registration_create
      description: |-
        Registers a new user.

        Accepts the following POST parameters: username, email, password1, password2.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /auth/registration/resend-email/:
    post:
      operationId: auth_registration_resend_email_create
      description: |-
        Resends another email to an unverified email.

        Accepts the following POST parameter: email.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerificationRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/registration/verify-email/:
    post:
      operationId: auth_registration_verify_email_create
      description: |-
        Verifies the email associated with the provided key.

        Accepts the following POST parameter: key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /auth/user/:
    get:
      operationId: auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailsRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailsRequest'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
components:
  schemas:
    ActionEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      description: |-
        * `0` - create
        * `1` - update
        * `2` - delete
        * `3` - access
    BulkAddPartsRequest:
      type: object
      properties:
        part_type:
          type: integer
        step:
          type: integer
        quantity:
          type: integer
          minimum: 1
        part_status:
          $ref: '#/components/schemas/PartStatusEnum'
        process_id:
          type: integer
        ERP_id:
          type: string
          minLength: 1
      required:
      - ERP_id
      - part_status
      - part_type
      - process_id
      - quantity
      - step
    BulkRemovePartsRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
      required:
      - ids
    ClassificationEnum:
      enum:
      - public
      - internal
      - confidential
      - restricted
      - secret
      type: string
      description: |-
        * `public` - Public
        * `internal` - Internal Use
        * `confidential` - Confidential
        * `restricted` - Restricted
        * `secret` - Secret
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
        hubspot_api_id:
          type: string
          maxLength: 50
      required:
      - description
      - hubspot_api_id
      - id
      - name
    CompanyRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
          minLength: 1
        hubspot_api_id:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - description
      - hubspot_api_id
      - name
    ContentType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        app_label:
          type: string
          maxLength: 100
        model:
          type: string
          title: Python model class name
          maxLength: 100
      required:
      - app_label
      - id
      - model
    Customer:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        parent_company:
          $ref: '#/components/schemas/Company'
        id:
          type: integer
          readOnly: true
      required:
      - id
      - parent_company
      - username
    CustomerRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        parent_company:
          $ref: '#/components/schemas/CompanyRequest'
      required:
      - parent_company
      - username
    Document:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_image:
          type: boolean
        file_name:
          type: string
          maxLength: 50
        file:
          type: string
          format: uri
        file_url:
          type: string
          nullable: true
          readOnly: true
        upload_date:
          type: string
          format: date
          readOnly: true
        uploaded_by:
          type: integer
          nullable: true
        uploaded_by_name:
          type: string
          readOnly: true
        content_type:
          type: integer
          nullable: true
          description: Model of the object this document relates to
        content_type_model:
          type: string
          nullable: true
          readOnly: true
        object_id:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: ID of the object this document relates to
        version:
          type: integer
          maximum: 32767
          minimum: 0
        classification:
          nullable: true
          description: |-
            Level of document classification:
            - "public": Public
            - "internal": Internal Use
            - "confidential": Confidential
            - "restricted": Restricted (serious impact)
            - "secret": Secret (critical impact)

            * `public` - Public
            * `internal` - Internal Use
            * `confidential` - Confidential
            * `restricted` - Restricted
            * `secret` - Secret
          oneOf:
          - $ref: '#/components/schemas/ClassificationEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - content_type_model
      - file
      - file_name
      - file_url
      - id
      - is_image
      - upload_date
      - uploaded_by_name
    DocumentRequest:
      type: object
      properties:
        is_image:
          type: boolean
        file_name:
          type: string
          minLength: 1
          maxLength: 50
        file:
          type: string
          format: binary
        uploaded_by:
          type: integer
          nullable: true
        content_type:
          type: integer
          nullable: true
          description: Model of the object this document relates to
        object_id:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: ID of the object this document relates to
        version:
          type: integer
          maximum: 32767
          minimum: 0
        classification:
          nullable: true
          description: |-
            Level of document classification:
            - "public": Public
            - "internal": Internal Use
            - "confidential": Confidential
            - "restricted": Restricted (serious impact)
            - "secret": Secret (critical impact)

            * `public` - Public
            * `internal` - Internal Use
            * `confidential` - Confidential
            * `restricted` - Restricted
            * `secret` - Secret
          oneOf:
          - $ref: '#/components/schemas/ClassificationEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - file
      - file_name
      - is_image
    EmployeeSelect:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
    Equipment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        equipment_type:
          type: integer
          nullable: true
        equipment_type_name:
          type: string
          readOnly: true
      required:
      - equipment_type_name
      - id
      - name
    EquipmentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        equipment_type:
          type: integer
          nullable: true
      required:
      - name
    EquipmentSelect:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        equipment_type:
          $ref: '#/components/schemas/EquipmentType'
        name:
          type: string
          maxLength: 50
      required:
      - equipment_type
      - id
      - name
    EquipmentType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    EquipmentTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - name
    ErrorType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        error_name:
          type: string
          maxLength: 50
        error_example:
          type: string
        part_type:
          type: integer
          nullable: true
        part_type_name:
          type: string
          readOnly: true
      required:
      - error_example
      - error_name
      - id
      - part_type_name
    ErrorTypeRequest:
      type: object
      properties:
        error_name:
          type: string
          minLength: 1
          maxLength: 50
        error_example:
          type: string
          minLength: 1
        part_type:
          type: integer
          nullable: true
      required:
      - error_example
      - error_name
    ExternalAPIOrderIdentifier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        stage_name:
          type: string
          maxLength: 100
        API_id:
          type: string
          maxLength: 50
      required:
      - API_id
      - id
      - stage_name
    ExternalAPIOrderIdentifierRequest:
      type: object
      properties:
        stage_name:
          type: string
          minLength: 1
          maxLength: 100
        API_id:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - API_id
      - stage_name
    LogEntry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        object_pk:
          type: string
          maxLength: 255
        object_repr:
          type: string
          title: Object representation
        content_type_name:
          type: string
          readOnly: true
        actor:
          type: integer
          nullable: true
        remote_addr:
          type: string
          nullable: true
          title: Remote address
        timestamp:
          type: string
          format: date-time
        action:
          allOf:
          - $ref: '#/components/schemas/ActionEnum'
          minimum: 0
          maximum: 32767
        changes:
          nullable: true
          title: Change message
      required:
      - action
      - content_type_name
      - id
      - object_pk
      - object_repr
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
      required:
      - password
    MeasurementDefinition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        label:
          type: string
          maxLength: 100
        step_name:
          type: string
          readOnly: true
        allow_override:
          type: boolean
        allow_remeasure:
          type: boolean
        allow_quarantine:
          type: boolean
        unit:
          type: string
          maxLength: 50
        require_qa_review:
          type: boolean
        nominal:
          type: number
          format: double
          nullable: true
        upper_tol:
          type: number
          format: double
          nullable: true
        lower_tol:
          type: number
          format: double
          nullable: true
        required:
          type: boolean
        type:
          $ref: '#/components/schemas/TypeEnum'
        step:
          type: integer
          readOnly: true
      required:
      - id
      - label
      - step
      - step_name
      - type
    MeasurementDefinitionRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          maxLength: 100
        allow_override:
          type: boolean
        allow_remeasure:
          type: boolean
        allow_quarantine:
          type: boolean
        unit:
          type: string
          maxLength: 50
        require_qa_review:
          type: boolean
        nominal:
          type: number
          format: double
          nullable: true
        upper_tol:
          type: number
          format: double
          nullable: true
        lower_tol:
          type: number
          format: double
          nullable: true
        required:
          type: boolean
        type:
          $ref: '#/components/schemas/TypeEnum'
      required:
      - label
      - type
    NullEnum:
      enum:
      - null
    OrderStatusEnum:
      enum:
      - RFI
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - ON_HOLD
      - CANCELLED
      type: string
      description: |-
        * `RFI` - RFI
        * `PENDING` - Pending
        * `IN_PROGRESS` - In progress
        * `COMPLETED` - Completed
        * `ON_HOLD` - On hold
        * `CANCELLED` - Cancelled
    Orders:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order_status:
          $ref: '#/components/schemas/OrderStatusEnum'
        customer:
          type: integer
        company:
          type: integer
        current_hubspot_gate:
          type: integer
          nullable: true
        customer_first_name:
          type: string
          readOnly: true
        customer_last_name:
          type: string
          readOnly: true
        company_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 50
        customer_note:
          type: string
          nullable: true
          maxLength: 500
        estimated_completion:
          type: string
          format: date
          nullable: true
        original_completion_date:
          type: string
          format: date-time
          nullable: true
        archived:
          type: boolean
        last_synced_hubspot_stage:
          type: string
          nullable: true
          maxLength: 100
      required:
      - company
      - company_name
      - customer
      - customer_first_name
      - customer_last_name
      - id
      - name
      - order_status
    OrdersRequest:
      type: object
      properties:
        order_status:
          $ref: '#/components/schemas/OrderStatusEnum'
        customer:
          type: integer
        company:
          type: integer
        current_hubspot_gate:
          type: integer
          nullable: true
        name:
          type: string
          minLength: 1
          maxLength: 50
        customer_note:
          type: string
          nullable: true
          maxLength: 500
        estimated_completion:
          type: string
          format: date
          nullable: true
        original_completion_date:
          type: string
          format: date-time
          nullable: true
        archived:
          type: boolean
        last_synced_hubspot_stage:
          type: string
          nullable: true
          maxLength: 100
      required:
      - company
      - customer
      - name
      - order_status
    PaginatedContentTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContentType'
    PaginatedDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedEmployeeSelectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSelect'
    PaginatedEquipmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'
    PaginatedEquipmentSelectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSelect'
    PaginatedEquipmentTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentType'
    PaginatedErrorTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ErrorType'
    PaginatedLogEntryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/LogEntry'
    PaginatedMeasurementDefinitionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementDefinition'
    PaginatedOrdersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Orders'
    PaginatedPartTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PartType'
    PaginatedPartsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Parts'
    PaginatedProcessWithStepsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProcessWithSteps'
    PaginatedProcessesList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Processes'
    PaginatedQualityReportFormList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/QualityReportForm'
    PaginatedSamplingRuleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SamplingRule'
    PaginatedSamplingRuleSetList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SamplingRuleSet'
    PaginatedStepDistributionResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StepDistributionResponse'
    PaginatedStepList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Step'
    PaginatedTrackerPageOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrackerPageOrder'
    PaginatedWorkOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkOrder'
    PartStatusEnum:
      enum:
      - PENDING
      - IN_PROGRESS
      - AWAITING_QA
      - READY FOR NEXT STEP
      - COMPLETED
      - QUARANTINED
      - REWORK_NEEDED
      - REWORK_IN_PROGRESS
      - SCRAPPED
      - CANCELLED
      type: string
      description: |-
        * `PENDING` - Pending
        * `IN_PROGRESS` - In Progress
        * `AWAITING_QA` - Awaiting QA
        * `READY FOR NEXT STEP` - Ready for next step
        * `COMPLETED` - Completed
        * `QUARANTINED` - Quarantined
        * `REWORK_NEEDED` - Rework Needed
        * `REWORK_IN_PROGRESS` - Rework In Progress
        * `SCRAPPED` - Scrapped
        * `CANCELLED` - Cancelled
    PartType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        previous_version:
          type: integer
          readOnly: true
          nullable: true
        previous_version_name:
          type: string
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 50
        ID_prefix:
          type: string
          nullable: true
          maxLength: 50
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        ERP_id:
          type: string
          nullable: true
          maxLength: 50
      required:
      - created_at
      - id
      - name
      - previous_version
      - previous_version_name
      - updated_at
    PartTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        ID_prefix:
          type: string
          nullable: true
          maxLength: 50
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        ERP_id:
          type: string
          nullable: true
          maxLength: 50
      required:
      - name
    Parts:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        part_status:
          $ref: '#/components/schemas/PartStatusEnum'
        order:
          type: integer
          nullable: true
        part_type:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        order_name:
          type: string
          readOnly: true
          nullable: true
        part_type_name:
          type: string
          readOnly: true
        step:
          type: integer
        step_description:
          type: string
          readOnly: true
        requires_sampling:
          type: boolean
          readOnly: true
        ERP_id:
          type: string
          maxLength: 50
        archived:
          type: boolean
        has_error:
          type: boolean
          readOnly: true
        work_order:
          type: integer
          nullable: true
        sampling_rule:
          type: integer
          nullable: true
        sampling_ruleset:
          type: integer
          nullable: true
        work_order_erp_id:
          type: string
          readOnly: true
          nullable: true
      required:
      - ERP_id
      - created_at
      - has_error
      - id
      - order_name
      - part_type
      - part_type_name
      - requires_sampling
      - step
      - step_description
      - work_order_erp_id
    PartsRequest:
      type: object
      properties:
        part_status:
          $ref: '#/components/schemas/PartStatusEnum'
        order:
          type: integer
          nullable: true
        part_type:
          type: integer
        step:
          type: integer
        ERP_id:
          type: string
          minLength: 1
          maxLength: 50
        archived:
          type: boolean
        work_order:
          type: integer
          nullable: true
        sampling_rule:
          type: integer
          nullable: true
        sampling_ruleset:
          type: integer
          nullable: true
      required:
      - ERP_id
      - part_type
      - step
    PasswordChangeRequest:
      type: object
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordResetConfirmRequest:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          minLength: 1
          maxLength: 128
        new_password2:
          type: string
          minLength: 1
          maxLength: 128
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PasswordResetRequest:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedCompanyRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
          minLength: 1
        hubspot_api_id:
          type: string
          minLength: 1
          maxLength: 50
    PatchedCustomerRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        parent_company:
          $ref: '#/components/schemas/CompanyRequest'
    PatchedDocumentRequest:
      type: object
      properties:
        is_image:
          type: boolean
        file_name:
          type: string
          minLength: 1
          maxLength: 50
        file:
          type: string
          format: binary
        uploaded_by:
          type: integer
          nullable: true
        content_type:
          type: integer
          nullable: true
          description: Model of the object this document relates to
        object_id:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: ID of the object this document relates to
        version:
          type: integer
          maximum: 32767
          minimum: 0
        classification:
          nullable: true
          description: |-
            Level of document classification:
            - "public": Public
            - "internal": Internal Use
            - "confidential": Confidential
            - "restricted": Restricted (serious impact)
            - "secret": Secret (critical impact)

            * `public` - Public
            * `internal` - Internal Use
            * `confidential` - Confidential
            * `restricted` - Restricted
            * `secret` - Secret
          oneOf:
          - $ref: '#/components/schemas/ClassificationEnum'
          - $ref: '#/components/schemas/NullEnum'
    PatchedEquipmentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        equipment_type:
          type: integer
          nullable: true
    PatchedEquipmentTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
    PatchedErrorTypeRequest:
      type: object
      properties:
        error_name:
          type: string
          minLength: 1
          maxLength: 50
        error_example:
          type: string
          minLength: 1
        part_type:
          type: integer
          nullable: true
    PatchedExternalAPIOrderIdentifierRequest:
      type: object
      properties:
        stage_name:
          type: string
          minLength: 1
          maxLength: 100
        API_id:
          type: string
          minLength: 1
          maxLength: 50
    PatchedMeasurementDefinitionRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          maxLength: 100
        allow_override:
          type: boolean
        allow_remeasure:
          type: boolean
        allow_quarantine:
          type: boolean
        unit:
          type: string
          maxLength: 50
        require_qa_review:
          type: boolean
        nominal:
          type: number
          format: double
          nullable: true
        upper_tol:
          type: number
          format: double
          nullable: true
        lower_tol:
          type: number
          format: double
          nullable: true
        required:
          type: boolean
        type:
          $ref: '#/components/schemas/TypeEnum'
    PatchedOrdersRequest:
      type: object
      properties:
        order_status:
          $ref: '#/components/schemas/OrderStatusEnum'
        customer:
          type: integer
        company:
          type: integer
        current_hubspot_gate:
          type: integer
          nullable: true
        name:
          type: string
          minLength: 1
          maxLength: 50
        customer_note:
          type: string
          nullable: true
          maxLength: 500
        estimated_completion:
          type: string
          format: date
          nullable: true
        original_completion_date:
          type: string
          format: date-time
          nullable: true
        archived:
          type: boolean
        last_synced_hubspot_stage:
          type: string
          nullable: true
          maxLength: 100
    PatchedPartTypeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        ID_prefix:
          type: string
          nullable: true
          maxLength: 50
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        ERP_id:
          type: string
          nullable: true
          maxLength: 50
    PatchedPartsRequest:
      type: object
      properties:
        part_status:
          $ref: '#/components/schemas/PartStatusEnum'
        order:
          type: integer
          nullable: true
        part_type:
          type: integer
        step:
          type: integer
        ERP_id:
          type: string
          minLength: 1
          maxLength: 50
        archived:
          type: boolean
        work_order:
          type: integer
          nullable: true
        sampling_rule:
          type: integer
          nullable: true
        sampling_ruleset:
          type: integer
          nullable: true
    PatchedProcessWithStepsRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        is_remanufactured:
          type: boolean
        part_type:
          type: integer
        steps:
          type: array
          items:
            $ref: '#/components/schemas/StepRequest'
        num_steps:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedProcessesRequest:
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/StepRequest'
        name:
          type: string
          minLength: 1
          maxLength: 50
        is_remanufactured:
          type: boolean
        num_steps:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        part_type:
          type: integer
        previous_version:
          type: integer
          nullable: true
    PatchedQualityReportFormRequest:
      type: object
      properties:
        step:
          type: integer
          nullable: true
        part:
          type: integer
          nullable: true
        machine:
          type: integer
          nullable: true
        operator:
          type: array
          items:
            type: integer
        sampling_rule:
          type: integer
          nullable: true
        sampling_method:
          type: string
          minLength: 1
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusEnum'
        description:
          type: string
          nullable: true
          maxLength: 300
        file:
          type: integer
          nullable: true
        errors:
          type: array
          items:
            type: integer
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementDefinitionRequest'
          writeOnly: true
    PatchedSamplingRuleRequest:
      type: object
      properties:
        ruleset:
          type: integer
        rule_type:
          $ref: '#/components/schemas/RuleTypeEnum'
        value:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_by:
          type: integer
          nullable: true
        modified_by:
          type: integer
          nullable: true
    PatchedSamplingRuleSetRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        origin:
          type: string
          maxLength: 100
        active:
          type: boolean
        version:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 1
        fallback_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Number of consecutive failures before switching to fallback
        fallback_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Number of good parts required before reverting to this ruleset
        is_fallback:
          type: boolean
          default: false
        archived:
          type: boolean
        part_type:
          type: integer
        process:
          type: integer
        step:
          type: integer
        supersedes:
          type: integer
          nullable: true
        fallback_ruleset:
          type: integer
          nullable: true
        created_by:
          type: integer
          nullable: true
        modified_by:
          type: integer
          nullable: true
    PatchedStepRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
          nullable: true
        is_last_step:
          type: boolean
        process:
          type: integer
        part_type:
          type: integer
    PatchedTrackerPageOrderRequest:
      type: object
      properties:
        order_status:
          $ref: '#/components/schemas/OrderStatusEnum'
        customer:
          $ref: '#/components/schemas/CustomerRequest'
        company:
          $ref: '#/components/schemas/CompanyRequest'
        name:
          type: string
          minLength: 1
          maxLength: 50
        customer_note:
          type: string
          nullable: true
          maxLength: 500
        estimated_completion:
          type: string
          format: date
          nullable: true
        original_completion_date:
          type: string
          format: date-time
          nullable: true
        archived:
          type: boolean
    PatchedUserDetailsRequest:
      type: object
      description: User model w/o password
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    PatchedWorkOrderRequest:
      type: object
      properties:
        related_order:
          type: integer
          nullable: true
        workorder_status:
          $ref: '#/components/schemas/WorkorderStatusEnum'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        ERP_id:
          type: string
          minLength: 1
          maxLength: 50
        expected_completion:
          type: string
          format: date
          nullable: true
        expected_duration:
          type: string
          nullable: true
        true_completion:
          type: string
          format: date
          nullable: true
        true_duration:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
          maxLength: 500
    ProcessWithSteps:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        is_remanufactured:
          type: boolean
        part_type:
          type: integer
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
        num_steps:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - id
      - is_remanufactured
      - name
      - num_steps
      - part_type
      - steps
    ProcessWithStepsRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        is_remanufactured:
          type: boolean
        part_type:
          type: integer
        steps:
          type: array
          items:
            $ref: '#/components/schemas/StepRequest'
        num_steps:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - is_remanufactured
      - name
      - num_steps
      - part_type
      - steps
    Processes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        part_type_name:
          type: string
          readOnly: true
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 50
        is_remanufactured:
          type: boolean
        num_steps:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        part_type:
          type: integer
        previous_version:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - is_remanufactured
      - name
      - num_steps
      - part_type
      - part_type_name
      - steps
      - updated_at
    ProcessesRequest:
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/StepRequest'
        name:
          type: string
          minLength: 1
          maxLength: 50
        is_remanufactured:
          type: boolean
        num_steps:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        part_type:
          type: integer
        previous_version:
          type: integer
          nullable: true
      required:
      - is_remanufactured
      - name
      - num_steps
      - part_type
      - steps
    QualityReportForm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        step:
          type: integer
          nullable: true
        part:
          type: integer
          nullable: true
        machine:
          type: integer
          nullable: true
        operator:
          type: array
          items:
            type: integer
        sampling_rule:
          type: integer
          nullable: true
        sampling_method:
          type: string
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusEnum'
        description:
          type: string
          nullable: true
          maxLength: 300
        file:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        errors:
          type: array
          items:
            type: integer
      required:
      - created_at
      - id
      - status
    QualityReportFormRequest:
      type: object
      properties:
        step:
          type: integer
          nullable: true
        part:
          type: integer
          nullable: true
        machine:
          type: integer
          nullable: true
        operator:
          type: array
          items:
            type: integer
        sampling_rule:
          type: integer
          nullable: true
        sampling_method:
          type: string
          minLength: 1
          maxLength: 50
        status:
          $ref: '#/components/schemas/StatusEnum'
        description:
          type: string
          nullable: true
          maxLength: 300
        file:
          type: integer
          nullable: true
        errors:
          type: array
          items:
            type: integer
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementDefinitionRequest'
          writeOnly: true
      required:
      - measurements
      - status
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
        password1:
          type: string
          writeOnly: true
          minLength: 1
        password2:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password1
      - password2
      - username
    ResendEmailVerificationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    RuleTypeEnum:
      enum:
      - every_nth_part
      - percentage
      - random
      - first_n_parts
      - last_n_parts
      type: string
      description: |-
        * `every_nth_part` - Every Nth Part
        * `percentage` - Percentage of Parts
        * `random` - Pure Random
        * `first_n_parts` - First N Parts
        * `last_n_parts` - Last N Parts
    SamplingRule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ruleset:
          type: integer
        rule_type:
          $ref: '#/components/schemas/RuleTypeEnum'
        value:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_by:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          nullable: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        ruletype_name:
          type: string
          readOnly: true
        ruleset_name:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - modified_at
      - rule_type
      - ruleset
      - ruleset_name
      - ruletype_name
    SamplingRuleRequest:
      type: object
      properties:
        ruleset:
          type: integer
        rule_type:
          $ref: '#/components/schemas/RuleTypeEnum'
        value:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_by:
          type: integer
          nullable: true
        modified_by:
          type: integer
          nullable: true
      required:
      - rule_type
      - ruleset
    SamplingRuleSet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rules:
          type: array
          items:
            $ref: '#/components/schemas/SamplingRule'
          readOnly: true
        part_type_name:
          type: string
          readOnly: true
        process_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        origin:
          type: string
          maxLength: 100
        active:
          type: boolean
        version:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 1
        fallback_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Number of consecutive failures before switching to fallback
        fallback_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Number of good parts required before reverting to this ruleset
        created_at:
          type: string
          format: date-time
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        is_fallback:
          type: boolean
          default: false
        archived:
          type: boolean
        part_type:
          type: integer
        process:
          type: integer
        step:
          type: integer
        supersedes:
          type: integer
          nullable: true
        fallback_ruleset:
          type: integer
          nullable: true
        created_by:
          type: integer
          nullable: true
        modified_by:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - modified_at
      - name
      - part_type
      - part_type_name
      - process
      - process_name
      - rules
      - step
    SamplingRuleSetRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        origin:
          type: string
          maxLength: 100
        active:
          type: boolean
        version:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 1
        fallback_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Number of consecutive failures before switching to fallback
        fallback_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Number of good parts required before reverting to this ruleset
        is_fallback:
          type: boolean
          default: false
        archived:
          type: boolean
        part_type:
          type: integer
        process:
          type: integer
        step:
          type: integer
        supersedes:
          type: integer
          nullable: true
        fallback_ruleset:
          type: integer
          nullable: true
        created_by:
          type: integer
          nullable: true
        modified_by:
          type: integer
          nullable: true
      required:
      - name
      - part_type
      - process
      - step
    SamplingRuleWriteRequest:
      type: object
      properties:
        rule_type:
          $ref: '#/components/schemas/RuleTypeEnum'
        value:
          type: integer
          nullable: true
        order:
          type: integer
        is_fallback:
          type: boolean
      required:
      - order
      - rule_type
    Stage:
      type: object
      properties:
        name:
          type: string
        timestamp:
          type: string
          format: date-time
          nullable: true
        is_completed:
          type: boolean
        is_current:
          type: boolean
      required:
      - is_completed
      - is_current
      - name
      - timestamp
    StatusEnum:
      enum:
      - PASS
      - FAIL
      - PENDING
      type: string
      description: |-
        * `PASS` - Pass
        * `FAIL` - Fail
        * `PENDING` - Pending
    Step:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
          nullable: true
        is_last_step:
          type: boolean
        process:
          type: integer
        part_type:
          type: integer
        process_name:
          type: string
          readOnly: true
        part_type_name:
          type: string
          readOnly: true
      required:
      - id
      - name
      - order
      - part_type
      - part_type_name
      - process
      - process_name
    StepDistributionResponse:
      type: object
      properties:
        id:
          type: integer
        count:
          type: integer
        name:
          type: string
      required:
      - count
      - id
      - name
    StepIncrementInputRequest:
      type: object
      properties:
        step_id:
          type: integer
        order_id:
          type: integer
      required:
      - order_id
      - step_id
    StepIncrementResponse:
      type: object
      properties:
        advanced:
          type: integer
        total:
          type: integer
      required:
      - advanced
      - total
    StepRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
          nullable: true
        is_last_step:
          type: boolean
        process:
          type: integer
        part_type:
          type: integer
      required:
      - name
      - order
      - part_type
      - process
    StepSamplingRulesResponse:
      type: object
      properties:
        detail:
          type: string
        ruleset_id:
          type: integer
        step_id:
          type: integer
      required:
      - detail
      - ruleset_id
      - step_id
    StepSamplingRulesWriteRequest:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/SamplingRuleWriteRequest'
        fallback_rules:
          type: array
          items:
            $ref: '#/components/schemas/SamplingRuleWriteRequest'
        fallback_threshold:
          type: integer
        fallback_duration:
          type: integer
      required:
      - rules
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    TrackerPageOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order_status:
          $ref: '#/components/schemas/OrderStatusEnum'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/Stage'
          readOnly: true
        customer:
          $ref: '#/components/schemas/Customer'
        company:
          $ref: '#/components/schemas/Company'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 50
        customer_note:
          type: string
          nullable: true
          maxLength: 500
        estimated_completion:
          type: string
          format: date
          nullable: true
        original_completion_date:
          type: string
          format: date-time
          nullable: true
        archived:
          type: boolean
      required:
      - company
      - created_at
      - customer
      - id
      - name
      - order_status
      - stages
      - updated_at
    TrackerPageOrderRequest:
      type: object
      properties:
        order_status:
          $ref: '#/components/schemas/OrderStatusEnum'
        customer:
          $ref: '#/components/schemas/CustomerRequest'
        company:
          $ref: '#/components/schemas/CompanyRequest'
        name:
          type: string
          minLength: 1
          maxLength: 50
        customer_note:
          type: string
          nullable: true
          maxLength: 500
        estimated_completion:
          type: string
          format: date
          nullable: true
        original_completion_date:
          type: string
          format: date-time
          nullable: true
        archived:
          type: boolean
      required:
      - company
      - customer
      - name
      - order_status
    TypeEnum:
      enum:
      - NUMERIC
      - PASS_FAIL
      type: string
      description: |-
        * `NUMERIC` - Numeric
        * `PASS_FAIL` - Pass/Fail
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    UserDetailsRequest:
      type: object
      description: User model w/o password
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
    VerifyEmailRequest:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - key
    WorkOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        related_order:
          type: integer
          nullable: true
        related_order_detail:
          allOf:
          - $ref: '#/components/schemas/Orders'
          readOnly: true
          nullable: true
        workorder_status:
          $ref: '#/components/schemas/WorkorderStatusEnum'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        ERP_id:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        expected_completion:
          type: string
          format: date
          nullable: true
        expected_duration:
          type: string
          nullable: true
        true_completion:
          type: string
          format: date
          nullable: true
        true_duration:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
          maxLength: 500
      required:
      - ERP_id
      - created_at
      - id
      - related_order_detail
      - updated_at
    WorkOrderRequest:
      type: object
      properties:
        related_order:
          type: integer
          nullable: true
        workorder_status:
          $ref: '#/components/schemas/WorkorderStatusEnum'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        ERP_id:
          type: string
          minLength: 1
          maxLength: 50
        expected_completion:
          type: string
          format: date
          nullable: true
        expected_duration:
          type: string
          nullable: true
        true_completion:
          type: string
          format: date
          nullable: true
        true_duration:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
          maxLength: 500
      required:
      - ERP_id
    WorkorderStatusEnum:
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - ON_HOLD
      - CANCELLED
      - WAITING_FOR_OPERATOR
      type: string
      description: |-
        * `PENDING` - Pending
        * `IN_PROGRESS` - In progress
        * `COMPLETED` - Completed
        * `ON_HOLD` - On hold
        * `CANCELLED` - Cancelled
        * `WAITING_FOR_OPERATOR` - Waiting for operator
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
