# Generated by Django 5.1.6 on 2025-09-02 17:33

import Tracker.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import pgvector.django.vector
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Tracker', '0001_enable_pgvector'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Companies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('hubspot_api_id', models.CharField(max_length=50)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.companies')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('classification', models.CharField(choices=[('public', 'Public'), ('internal', 'Internal Use'), ('confidential', 'Confidential'), ('restricted', 'Restricted'), ('secret', 'Secret')], default='internal', help_text='Security classification level for document access control', max_length=20, null=True)),
                ('ai_readable', models.BooleanField(default=False)),
                ('is_image', models.BooleanField(default=False)),
                ('file_name', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to=Tracker.models.part_doc_upload_path)),
                ('upload_date', models.DateField(auto_now_add=True)),
                ('object_id', models.PositiveBigIntegerField(blank=True, help_text='ID of the object this document relates to', null=True)),
                ('content_type', models.ForeignKey(blank=True, help_text='Model of the object this document relates to', null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.documents')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.equipmenttype')),
            ],
            options={
                'verbose_name': 'Equipment Type',
                'verbose_name_plural': 'Equipment Types',
            },
        ),
        migrations.CreateModel(
            name='Equipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.equipments')),
                ('equipment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.equipmenttype')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipments',
            },
        ),
        migrations.CreateModel(
            name='ExternalAPIOrderIdentifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('stage_name', models.CharField(max_length=100, unique=True)),
                ('API_id', models.CharField(max_length=50)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.externalapiorderidentifier')),
            ],
            options={
                'verbose_name': 'External API Order Identifier',
                'verbose_name_plural': 'External API Order Identifiers',
            },
        ),
        migrations.CreateModel(
            name='MeasurementDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('label', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('NUMERIC', 'Numeric'), ('PASS_FAIL', 'Pass/Fail')], max_length=20)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('nominal', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('upper_tol', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('lower_tol', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('required', models.BooleanField(default=True)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.measurementdefinition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('customer_note', models.TextField(blank=True, max_length=500, null=True)),
                ('estimated_completion', models.DateField(blank=True, null=True)),
                ('original_completion_date', models.DateTimeField(blank=True, null=True)),
                ('order_status', models.CharField(choices=[('RFI', 'RFI'), ('PENDING', 'Pending'), ('IN_PROGRESS', 'In progress'), ('COMPLETED', 'Completed'), ('ON_HOLD', 'On hold'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=50)),
                ('hubspot_deal_id', models.CharField(blank=True, max_length=60, null=True, unique=True)),
                ('last_synced_hubspot_stage', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='Tracker.companies')),
                ('current_hubspot_gate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.externalapiorderidentifier')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.orders')),
            ],
            options={
                'verbose_name': 'Order',
            },
        ),
        migrations.CreateModel(
            name='PartTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('ID_prefix', models.CharField(blank=True, max_length=50, null=True)),
                ('ERP_id', models.CharField(blank=True, max_length=50, null=True)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.parttypes')),
            ],
            options={
                'verbose_name': 'Part Type',
                'verbose_name_plural': 'Part Types',
            },
        ),
        migrations.CreateModel(
            name='Parts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('ERP_id', models.CharField(max_length=50)),
                ('part_status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('AWAITING_QA', 'Awaiting QA'), ('READY FOR NEXT STEP', 'Ready for next step'), ('COMPLETED', 'Completed'), ('QUARANTINED', 'Quarantined'), ('REWORK_NEEDED', 'Rework Needed'), ('REWORK_IN_PROGRESS', 'Rework In Progress'), ('SCRAPPED', 'Scrapped'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=50)),
                ('requires_sampling', models.BooleanField(default=False)),
                ('sampling_context', models.JSONField(blank=True, default=dict)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='Tracker.orders')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.parts')),
                ('part_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parts', to='Tracker.parttypes')),
            ],
            options={
                'verbose_name': 'Part',
                'verbose_name_plural': 'Parts',
            },
        ),
        migrations.CreateModel(
            name='Processes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('is_remanufactured', models.BooleanField(default=False)),
                ('num_steps', models.IntegerField()),
                ('is_batch_process', models.BooleanField(default=False, help_text='If True, UI treats work order parts as a batch unit')),
                ('part_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processes', to='Tracker.parttypes')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.processes')),
            ],
            options={
                'verbose_name': 'Process',
                'verbose_name_plural': 'Processes',
            },
        ),
        migrations.CreateModel(
            name='QualityErrorsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('error_name', models.CharField(max_length=50)),
                ('error_example', models.TextField()),
                ('part_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.parttypes')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.qualityerrorslist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SamplingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('rule_type', models.CharField(choices=[('every_nth_part', 'Every Nth Part'), ('percentage', 'Percentage of Parts'), ('random', 'Pure Random'), ('first_n_parts', 'First N Parts'), ('last_n_parts', 'Last N Parts'), ('exact_count', 'Exact Count (No Variance)')], max_length=32)),
                ('value', models.PositiveIntegerField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('algorithm_description', models.TextField(default='SHA-256 hash modulo arithmetic', help_text='Description of sampling algorithm for audit purposes')),
                ('last_validated', models.DateTimeField(blank=True, null=True)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.samplingrule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SamplingAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('sampling_decision', models.BooleanField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ruleset_type', models.CharField(choices=[('PRIMARY', 'Primary Ruleset'), ('FALLBACK', 'Fallback Ruleset')], max_length=20)),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.parts')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.samplingauditlog')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.samplingrule')),
            ],
            options={
                'verbose_name': 'Sampling Audit Log',
                'verbose_name_plural': 'Sampling Audit Logs',
            },
        ),
        migrations.AddField(
            model_name='parts',
            name='sampling_rule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sampled_parts', to='Tracker.samplingrule'),
        ),
        migrations.CreateModel(
            name='SamplingRuleSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('origin', models.CharField(blank=True, max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('fallback_threshold', models.PositiveIntegerField(blank=True, help_text='Number of consecutive failures before switching to fallback', null=True)),
                ('fallback_duration', models.PositiveIntegerField(blank=True, help_text='Number of good parts required before reverting to this ruleset', null=True)),
                ('is_fallback', models.BooleanField(default=False)),
                ('fallback_ruleset', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='used_as_fallback_for', to='Tracker.samplingruleset')),
                ('part_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.parttypes')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.samplingruleset')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.processes')),
                ('supersedes', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='superseded_by', to='Tracker.samplingruleset')),
            ],
        ),
        migrations.AddField(
            model_name='samplingrule',
            name='ruleset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='Tracker.samplingruleset'),
        ),
        migrations.AddField(
            model_name='parts',
            name='sampling_ruleset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sampled_parts', to='Tracker.samplingruleset'),
        ),
        migrations.CreateModel(
            name='Steps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('pass_threshold', models.FloatField(default=1.0)),
                ('order', models.IntegerField()),
                ('expected_duration', models.DurationField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_last_step', models.BooleanField(default=False)),
                ('block_on_quarantine', models.BooleanField(default=False)),
                ('requires_qa_signoff', models.BooleanField(default=False)),
                ('sampling_required', models.BooleanField(default=False)),
                ('min_sampling_rate', models.FloatField(default=0.0, help_text='Minimum % of parts that must be sampled at this step')),
                ('part_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='steps', to='Tracker.parttypes')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.steps')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='steps', to='Tracker.processes')),
                ('required_measurements', models.ManyToManyField(blank=True, help_text='Measurements that must be collected during this step', related_name='required_on_steps', to='Tracker.measurementdefinition')),
            ],
            options={
                'verbose_name': 'Step',
                'verbose_name_plural': 'Steps',
                'ordering': ('part_type', 'order'),
            },
        ),
        migrations.AddField(
            model_name='samplingruleset',
            name='step',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sampling_ruleset', to='Tracker.steps'),
        ),
        migrations.CreateModel(
            name='QualityReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('sampling_method', models.CharField(default='manual', max_length=50)),
                ('status', models.CharField(choices=[('PASS', 'Pass'), ('FAIL', 'Fail'), ('PENDING', 'Pending')], max_length=10)),
                ('description', models.TextField(blank=True, max_length=300, null=True)),
                ('errors', models.ManyToManyField(blank=True, to='Tracker.qualityerrorslist')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.documents')),
                ('machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.equipments')),
                ('part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='error_reports', to='Tracker.parts')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.qualityreports')),
                ('sampling_audit_log', models.ForeignKey(blank=True, help_text='Links to the sampling decision that triggered this inspection', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.samplingauditlog')),
                ('sampling_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.samplingrule')),
                ('step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.steps')),
            ],
            options={
                'verbose_name': 'Error Report',
                'verbose_name_plural': 'Error Reports',
            },
        ),
        migrations.AddField(
            model_name='parts',
            name='step',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_parts', to='Tracker.steps'),
        ),
        migrations.AddField(
            model_name='measurementdefinition',
            name='step',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurement_definitions', to='Tracker.steps'),
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('workorder_status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In progress'), ('COMPLETED', 'Completed'), ('ON_HOLD', 'On hold'), ('CANCELLED', 'Cancelled'), ('WAITING_FOR_OPERATOR', 'Waiting for operator')], default='PENDING', max_length=50)),
                ('quantity', models.IntegerField(default=1)),
                ('ERP_id', models.CharField(max_length=50)),
                ('expected_completion', models.DateField(blank=True, null=True)),
                ('expected_duration', models.DurationField(blank=True, null=True)),
                ('true_completion', models.DateField(blank=True, null=True)),
                ('true_duration', models.DurationField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, max_length=500, null=True)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.workorder')),
                ('related_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='related_orders', to='Tracker.orders')),
            ],
            options={
                'verbose_name': 'Work Order',
                'verbose_name_plural': 'Work Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SamplingAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('parts_sampled', models.PositiveIntegerField(default=0)),
                ('parts_total', models.PositiveIntegerField(default=0)),
                ('defects_found', models.PositiveIntegerField(default=0)),
                ('actual_sampling_rate', models.FloatField()),
                ('target_sampling_rate', models.FloatField()),
                ('variance', models.FloatField()),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.samplinganalytics')),
                ('ruleset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.samplingruleset')),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.workorder')),
            ],
            options={
                'verbose_name': 'Sampling Analytics',
                'verbose_name_plural': 'Sampling Analytics',
            },
        ),
        migrations.AddField(
            model_name='parts',
            name='work_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parts', to='Tracker.workorder'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parent_company', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='Tracker.companies')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StepTransitionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Timestamp automatically recorded at the time of transition.')),
                ('part', models.ForeignKey(blank=True, help_text='The part that transitioned to the step.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.parts')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.steptransitionlog')),
                ('step', models.ForeignKey(blank=True, help_text='The step the part transitioned to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.steps')),
                ('operator', models.ForeignKey(blank=True, help_text='The user (operator) who performed the step transition.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Step Transition Log',
                'verbose_name_plural': 'Step Transition Log',
            },
        ),
        migrations.AddField(
            model_name='steps',
            name='notification_users',
            field=models.ManyToManyField(blank=True, related_name='notification_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SamplingTriggerState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('triggered_at', models.DateTimeField(auto_now_add=True)),
                ('success_count', models.PositiveIntegerField(default=0)),
                ('fail_count', models.PositiveIntegerField(default=0)),
                ('notification_sent', models.BooleanField(default=False)),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('parts_inspected', models.ManyToManyField(blank=True, to='Tracker.parts')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.samplingtriggerstate')),
                ('ruleset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.samplingruleset')),
                ('triggered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.qualityreports')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.steps')),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.workorder')),
                ('notified_users', models.ManyToManyField(blank=True, related_name='sampling_notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='samplingruleset',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='samplingruleset',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='samplingrule',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='samplingrule',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='qualityreports',
            name='operator',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='QaApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.qaapproval')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qa_approvals', to='Tracker.steps')),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qa_approvals', to='Tracker.workorder')),
                ('qa_staff', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qa_approvals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='orders',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MeasurementResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('value_numeric', models.FloatField(blank=True, null=True)),
                ('value_pass_fail', models.CharField(blank=True, choices=[('PASS', 'Pass'), ('FAIL', 'Fail')], max_length=4, null=True)),
                ('is_within_spec', models.BooleanField()),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Tracker.measurementdefinition')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.measurementresult')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='Tracker.qualityreports')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurementDisposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('disposition_type', models.CharField(choices=[('QUARANTINE', 'Quarantined'), ('REMEASURE', 'Re-measured'), ('OVERRIDDEN', 'Overridden by QA'), ('ESCALATED', 'Escalated for Review')])),
                ('notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(auto_now_add=True)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.measurementdisposition')),
                ('measurement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='disposition', to='Tracker.measurementresult')),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.equipments')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.equipmentusage')),
                ('part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.parts')),
                ('error_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipment_usages', to='Tracker.qualityreports')),
                ('step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracker.steps')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Equipment Usage',
                'verbose_name_plural': 'Equipment Usage',
            },
        ),
        migrations.AddField(
            model_name='documents',
            name='uploaded_by',
            field=models.ForeignKey(auto_created=True, blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ArchiveReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current_version', models.BooleanField(default=True)),
                ('reason', models.CharField(choices=[('completed', 'Completed'), ('user_error', 'Archived due to User Error'), ('obsolete', 'Obsolete')], max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('object_id', models.PositiveIntegerField()),
                ('archived_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='Tracker.archivereason')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Archive Reason',
                'verbose_name_plural': 'Archive Reasons',
            },
        ),
        migrations.CreateModel(
            name='DocChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embedding', pgvector.django.vector.VectorField(dimensions=384)),
                ('preview_text', models.TextField(blank=True)),
                ('full_text', models.TextField(blank=True)),
                ('span_meta', models.JSONField(blank=True, default=dict)),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='Tracker.documents')),
            ],
            options={
                'db_table': 'doc_chunks',
                'indexes': [models.Index(fields=['doc'], name='doc_chunks_doc_id_0eb459_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='samplingauditlog',
            index=models.Index(fields=['part', 'timestamp'], name='Tracker_sam_part_id_68cd18_idx'),
        ),
        migrations.AddIndex(
            model_name='samplingauditlog',
            index=models.Index(fields=['rule', 'sampling_decision'], name='Tracker_sam_rule_id_d942d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='samplinganalytics',
            unique_together={('ruleset', 'work_order')},
        ),
        migrations.AlterUniqueTogether(
            name='steps',
            unique_together={('process', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='samplingtriggerstate',
            unique_together={('ruleset', 'work_order', 'step')},
        ),
        migrations.AlterUniqueTogether(
            name='samplingruleset',
            unique_together={('part_type', 'process', 'step', 'is_fallback')},
        ),
        migrations.AlterUniqueTogether(
            name='archivereason',
            unique_together={('content_type', 'object_id')},
        ),
    ]
