import { makeApi, Zodios, type ZodiosOptions } from "@zodios/core";
import { z } from "zod";
import qs from "qs";

{{#if imports}}
    {{#each imports}}
        import { {{{@key}}} } from "./{{{this}}}"
    {{/each}}
{{/if}}

{{#if types}}
    {{#each types}}
        {{{this}}};
    {{/each}}
{{/if}}

{{#each schemas}}
    const {{@key}}{{#if (lookup ../emittedType @key)}}: z.ZodType<{{@key}}>{{/if}} = {{{this}}};
{{/each}}

{{#ifNotEmptyObj schemas}}
    export const schemas = {
    {{#each schemas}}
        {{@key}},
    {{/each}}
    };
{{/ifNotEmptyObj}}

const endpoints = makeApi([
{{#each endpoints}}
    {
    method: "{{method}}",
    path: "{{path}}",
    {{#if @root.options.withAlias}}
        {{#if alias}}
            alias: "{{alias}}",
        {{/if}}
    {{/if}}
    {{#if description}}
        description: `{{description}}`,
    {{/if}}
    {{#if requestFormat}}
        requestFormat: "{{requestFormat}}",
    {{/if}}
    {{#if parameters}}
        parameters: [
        {{#each parameters}}
            {
            name: "{{name}}",
            {{#if description}}
                description: `{{description}}`,
            {{/if}}
            {{#if type}}
                type: "{{type}}",
            {{/if}}
            schema: {{{schema}}}
            },
        {{/each}}
        ],
    {{/if}}
    response: {{{response}}},
    {{#if errors.length}}
        errors: [
        {{#each errors}}
            {
            {{#ifeq status "default" }}
                status: "default",
            {{else}}
                status: {{status}},
            {{/ifeq}}
            {{#if description}}
                description: `{{description}}`,
            {{/if}}
            schema: {{{schema}}}
            },
        {{/each}}
        ]
    {{/if}}
    },
{{/each}}
]);

// Use VITE_API_TARGET environment variable for production builds
// In development with Vite dev server, don't set base URL to rely on Vite proxy
// In production, this will be replaced at build time with the actual backend URL
const BASE_URL = import.meta.env.VITE_API_TARGET{{#if options.baseUrl}} || "{{options.baseUrl}}"{{/if}};

export const {{options.apiClientName}} = BASE_URL
? new Zodios(BASE_URL, endpoints, {
axiosConfig: {
paramsSerializer: (params) => qs.stringify(params, { arrayFormat: "repeat" }),
},
})
: new Zodios(endpoints, {
axiosConfig: {
paramsSerializer: (params) => qs.stringify(params, { arrayFormat: "repeat" }),
},
});

export function createApiClient(baseUrl: string, options?: ZodiosOptions) {
return new Zodios(baseUrl, endpoints, {
axiosConfig: {
...options?.axiosConfig,
paramsSerializer: (params) => qs.stringify(params, { arrayFormat: "repeat" }),
},
...options,
});
}
